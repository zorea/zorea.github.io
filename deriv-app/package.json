{
  "name": "root",
  "private": true,
  "devDependencies": {
    "husky": "^3.0.1",
    "lerna": "^3.15.0"
  },
  "scripts": {
    "bootstrap": "f () { npm ci && lerna link && lerna bootstrap --scope deriv-${1:-'*'} && lerna link && npm run build:travis ;}; f",
    "build": "f () { lerna exec --scope deriv-${1:-'*'} -- npm run build $2 ;}; f",
    "build:local": "lerna exec --scope deriv-trader --scope deriv-bot --parallel -- npm run build",
    "build:travis": "lerna exec --scope deriv-shared --scope deriv-components --scope deriv-translations -- npm run build:travis",
    "clean": "echo \"Remove $(git rev-parse --show-toplevel)/node_modules\" && lerna clean && rm -rf \"$(git rev-parse --show-toplevel)/node_modules\"",
    "deploy": "f () { npm run build:local && lerna exec --scope deriv-core -- npm run deploy $@ ;}; f",
    "deploy:clean": "f () { npm run build:local && lerna exec --scope deriv-core -- npm run deploy:clean $@ ;}; f",
    "deploy:folder": "f () { npm run build:local && lerna exec --scope deriv-core -- npm run deploy:folder $@ ;}; f",
    "deploy:production": "lerna exec --scope deriv-core -- npm run deploy:production",
    "deploy:staging": "lerna exec --scope deriv-core -- npm run deploy:staging",
    "serve": "f () { lerna exec --scope deriv-${1:-'*'} -- npm run serve ;}; f",
    "start": "f () { lerna exec --scope deriv-${1:-'*'} -- npm run start ;}; f",
    "test": "f () { lerna exec --scope deriv-${1:-'*'} --parallel -- npm run test ;}; f",
    "test:eslint": "f () { lerna exec --scope deriv-${1:-'*'} -- npm run test:eslint ;}; f",
    "test:mocha": "f () { lerna exec --scope deriv-${1:-'*'} -- npm run test:mocha ;}; f",
    "test:stylelint": "f () { lerna exec --scope deriv-${1:-'*'} -- npm run test:stylelint ;}; f",
    "translate": "f () { lerna exec --scope deriv-translations -- npm run translate ;}; f"
  },
  "husky": {
    "hooks": {
      "post-merge": "bash ./hooks/post-merge.sh"
    }
  }
}
